// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zCreateMessageRequest = z.object({
    encrypted_content: z.string(),
    parent_id: z.union([
        z.coerce.bigint(),
        z.null()
    ]).optional(),
    recipient_id: z.string().uuid(),
    sender_id: z.string().uuid(),
    signature: z.union([
        z.string(),
        z.null()
    ]).optional()
});

export const zCreateMessageResponse = z.object({
    message_id: z.coerce.bigint()
});

export const zMessage = z.object({
    created_at: z.string().datetime(),
    encrypted_content: z.string(),
    id: z.coerce.bigint(),
    is_read: z.boolean(),
    parent_id: z.union([
        z.coerce.bigint(),
        z.null()
    ]).optional(),
    recipient_id: z.string().uuid(),
    sender_id: z.string().uuid(),
    signature: z.union([
        z.string(),
        z.null()
    ]).optional()
});

export const zPublicKey = z.string();

export const zPublicKeyHash = z.string();

export const zRegisterRequest = z.object({
    public_key: z.string(),
    username: z.union([
        z.string(),
        z.null()
    ]).optional()
});

export const zRegisterResponse = z.object({
    user_id: z.string().uuid(),
    username: z.string()
});

export const zRevokeTokenRequest = z.object({
    jwt_token: z.string(),
    reason: z.union([
        z.string(),
        z.null()
    ]).optional()
});

export const zStoreTokenRequest = z.object({
    device_info: z.union([
        z.string(),
        z.null()
    ]).optional(),
    jwt_token: z.string()
});

export const zUpdateUserRequest = z.object({
    new_public_key: z.union([
        z.string(),
        z.null()
    ]).optional(),
    new_username: z.union([
        z.string(),
        z.null()
    ]).optional()
});

export const zUser = z.object({
    created_at: z.string().datetime(),
    id: z.string().uuid(),
    last_login: z.union([
        z.string().datetime(),
        z.null()
    ]).optional(),
    public_key: zPublicKey,
    public_key_hash: zPublicKeyHash,
    updated_at: z.string().datetime(),
    username: z.string()
});

export const zValidateTokenRequest = z.object({
    jwt_token: z.string()
});

export const zValidateTokenResponse = z.object({
    valid: z.boolean()
});

export const zGetUsersHandlerResponse = z.array(zUser);

export const zRegisterUserHandlerResponse = zRegisterResponse;

export const zCreateMessageHandlerResponse = zCreateMessageResponse;

export const zGetConversationHandlerResponse = z.array(zMessage);

export const zGetThreadRepliesHandlerResponse = z.array(zMessage);

export const zGetCompleteThreadHandlerResponse = z.array(zMessage);

export const zGetUserThreadsHandlerResponse = z.array(zMessage);

export const zGetMessageHandlerResponse = zMessage;

export const zValidateTokenHandlerResponse = zValidateTokenResponse;

export const zGetUserHandlerResponse = zUser;